{"version":3,"sources":["components/Sources.js","components/Navbar.js","components/Share.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Sources","state","fetch","then","response","json","setState","data","sources","_","map","this","source","console","log","className","href","id","onClick","e","props","updateSource","name","React","Component","NavBar","FacebookShareButton","ShareButtons","GooglePlusShareButton","LinkedinShareButton","TwitterShareButton","FacebookIcon","generateShareIcon","TwitterIcon","GooglePlusIcon","LinkedinIcon","Share","shareUrl","share","title","url","size","round","windowWidth","windowHeight","defaultProps","Content","getData","nextProps","sourceName","sr","nm","articles","i","article","description","target","src","urlToImage","height","App","Navbar","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b106d5fd.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport \"whatwg-fetch\";\r\nimport _ from \"lodash\";\r\n\r\nexport class Sources extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {};\r\n}\r\n\r\ncomponentWillMount() {\r\n    const url = `https://newsapi.org/v1/sources?language=en`;\r\n    fetch(url)\r\n    .then(function (response) {\r\n        return response.json();\r\n    })\r\n    .then((json) => {\r\n        this.setState({\r\n        data: json.sources,\r\n        });\r\n    });\r\n}\r\n\r\nrender() {\r\n    let sources = _.map(this.state.data, (source) => {\r\n    console.log(source);\r\n    return (\r\n        <div className=\"list-group-item\">\r\n        * &nbsp;\r\n        <a\r\n            key={source.id}\r\n            href={\"#\" + source.id}\r\n            onClick={(e) => {\r\n            this.props.updateSource(source.id, source.name);\r\n            }}\r\n        >\r\n            {source.name}\r\n        </a>\r\n        </div>\r\n    );\r\n    });\r\n    return <div className=\"list-group\">{sources}</div>;\r\n}\r\n}\r\n","const NavBar = () => {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar sticky-top navbar-inverse bg-inverse\">\r\n          <h4 className=\"navbar-brand\">News Daily - Read news from anywhere</h4>\r\n        </nav>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default NavBar;","import React from 'react';\r\nimport { ShareButtons, generateShareIcon } from 'react-share';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst {\r\n  FacebookShareButton,\r\n  GooglePlusShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n} = ShareButtons;\r\nconst FacebookIcon = generateShareIcon('facebook');\r\nconst TwitterIcon = generateShareIcon('twitter');\r\nconst GooglePlusIcon = generateShareIcon('google');\r\nconst LinkedinIcon = generateShareIcon('linkedin');\r\n\r\nconst Share = (props) => {\r\n  const shareUrl = props.share;\r\n  const title = props.title;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s2 m2 l2\">\r\n        <FacebookShareButton\r\n          url={shareUrl}\r\n          title={title}\r\n          className=\"Demo__some-network__share-button\">\r\n          <FacebookIcon size={32} round />\r\n        </FacebookShareButton>\r\n      </div>\r\n      <div className=\"col s2 m2 l2\">\r\n        <TwitterShareButton\r\n          url={shareUrl}\r\n          title={title}\r\n          className=\"Demo__some-network__share-button\">\r\n          <TwitterIcon size={32} round />\r\n        </TwitterShareButton>\r\n      </div>\r\n      <div className=\"col s2 m2 l2\">\r\n        <GooglePlusShareButton\r\n          url={shareUrl}\r\n          className=\"Demo__some-network__share-button\">\r\n          <GooglePlusIcon size={32} round />\r\n        </GooglePlusShareButton>\r\n      </div>\r\n      <div className=\"col s2 m2 l2\">\r\n        <LinkedinShareButton\r\n          url={shareUrl}\r\n          title={title}\r\n          windowWidth={750}\r\n          windowHeight={600}\r\n          className=\"Demo__some-network__share-button\">\r\n          <LinkedinIcon size={32} round />\r\n        </LinkedinShareButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShare.defaultProps = {\r\n  share: '',\r\n  title: '',\r\n};\r\n\r\nShare.propTypes = {\r\n  share: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Share;","import React from 'react';\r\nimport 'whatwg-fetch';\r\nimport _ from 'lodash';\r\nimport Share from './Share.js';\r\n\r\nexport class Content extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData(nextProps.source, nextProps.sourceName);\r\n    }\r\n\r\n    getData(sr = 'abc-news-au', nm = 'ABC News (AU)') {\r\n        const url = `https://newsapi.org/v1/articles?source=${sr}&apiKey=b5d3c06968cf439bb09c3ba2f1e489ff`;\r\n        fetch(url)\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then((json) => {\r\n                this.setState({\r\n                    source: sr,\r\n                    sourceName: nm,\r\n                    data: json.articles,\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let i = 0;\r\n        let articles = _.map(this.state.data, (article) => {\r\n            return (\r\n                <div key={i++} className=\"list-group-item \">\r\n                    <p className=\"col-10\">\r\n                        <b>{article.title}</b> <br />{' '}\r\n                        <span className=\"lead\">{article.description}</span>&nbsp;\r\n                        <a href={article.url} target=\"_blank\">\r\n                            Read More...\r\n                        </a>\r\n                    </p>\r\n                    <Share share={article.url} title={article.title} />\r\n                    <img src={article.urlToImage} className=\"col-2 rounded\" height=\"100\" />\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">{this.state.sourceName}</h2>\r\n                <div className=\"list-group list-group-flush\">{articles}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Sources } from \"./components/Sources\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Content } from \"./components/Content\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  updateSource(source, name) {\r\n    this.setState({\r\n      source: source,\r\n      sourceName: name,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"jumbotron-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4\">\r\n              <Sources updateSource={this.updateSource.bind(this)} />\r\n            </div>\r\n            <div className=\"col-sm-8 fixed-content\">\r\n              <Content\r\n                source={this.state.source}\r\n                sourceName={this.state.sourceName}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}